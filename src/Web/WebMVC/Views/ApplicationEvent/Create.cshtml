@model ApplicationEventCreateViewModel

@{
    ViewData["Title"] = "Create Application Event";
    var headerList = new List<Header>() {
        new Header() { Controller = "Home", Text = "Back to Home" },
        new Header() { Text = " / " },
        new Header() { Controller = "ApplicationEvent", Text = "Application Event" } };
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Create Application Event</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a class="" asp-controller="Home" asp-action="Index">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a>Settings</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Create Application Event</strong>
            </li>
        </ol>
    </div>
    <div class="col-sm-8">
        <div class="title-action">
            <a class="btn btn-primary" asp-controller="ApplicationEvent" asp-action="Index">Back To List</a>
        </div>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Create Application Event</h5>
                </div>
                <div class="ibox-content">
                    <form method="post" role="form" asp-controller="ApplicationEvent" asp-action="Create">
                        <div class="row">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(err => err.Errors))
                            {
                                <div class="alert alert-warning" role="alert">
                                    &nbsp;@error.ErrorMessage
                                </div>
                            }
                        </div>
                        <div class="form-group row">
                            <label asp-for="ApplicationEventName" class="col-lg-2 col-form-label">Application Event Name</label>
                            <div class="col-lg-5">
                                <input asp-for="ApplicationEventName" type="text" placeholder="Application Event Name" class="form-control" />
                                <span asp-validation-for="ApplicationEventName" class="text-danger" />
                            </div>
                        </div>
                        <div class="form-group row">
                            <label asp-for="Description" class="col-lg-2 col-form-label">Description</label>
                            <div class="col-lg-5">
                                <input asp-for="Description" type="text" placeholder="Description" class="form-control" />
                                <span asp-validation-for="Description" class="text-danger" />
                            </div>
                        </div>
                        @*<div id="subscriberFilters">
                            <div class="form-group row">
                                <label asp-for="SubscriberFilters" class="col-lg-2 col-form-label">Subscriber Filter</label>
                                <div class="col-lg-5">
                                    <select asp-for="@Model.SubscriberFilters[0].Fil terType" asp-items="@Model.SubscriberFiltersList" placeholder="" class="form-control subscriberFilterSelect"></select>
                                </div>
                            </div>
                            <div class="form-group row">
                                    <div class="col-lg-5">
                                        <input asp-for="@Model.SubscriberFilters[0].FilterValue" type="text" placeholder="Value" class="form-control" />
                                        <span asp-validation-for="@Model.SubscriberFilters[0].FilterValue" class="text-danger" />
                                    </div>
                                </div>
                            <button id="btnAddFilter" class="btn btn-info btn-sm" type="submit">Add New Filter</button>
                        </div>*@
                        <div class="hr-line-dashed"></div>
                        <div class="form-group row">
                            <div class="col-sm-4 col-sm-offset-2">
                                <a class="btn btn-white btn-sm" asp-controller="ApplicationEvent" asp-action="Index">Cancel</a>
                                <button class="btn btn-primary btn-sm" type="submit">Save changes</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <environment names="Development">
        <link rel="stylesheet" href="~/lib/select2/dist/css/select2.min.css" />
        <link rel="stylesheet" href="~/lib/select2/dist/css/select2-bootstrap4.min.css" />
    </environment>
    <environment names="Staging,Production">
        <link rel="stylesheet" href="~/lib/select2/dist/css/select2.min.css" />
        <link rel="stylesheet" href="~/lib/select2/dist/css/select2-bootstrap4.min.css" />
    </environment>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <environment names="Development">
        <script src="~/lib/select2/dist/js/select2.full.min.js"></script>
    </environment>

    <environment names="Staging,Production">
        <script src="~/lib/select2/dist/js/select2.full.min.js"></script>
    </environment>

    <script type="text/javascript">
        $(document).ready(function () {

            var $fields = $('#subscriberFilters');
            $('#btnAddFilter').click(function (e) {
                e.preventDefault();
                $("#subscriberFilters").outerHTML().appendTo($fields);
            });

            $(".subscriberFilterSelect").select2({
                theme: 'bootstrap4',
                placeholder: {
                    id: '-1', // the value of the option
                    text: 'Select an option'
                },
                allowClear: true
            });
        });

        $('.subscriberFilterSelect').val(null).trigger('change');
    </script>
}